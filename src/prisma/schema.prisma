generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int               @id @default(autoincrement())
  email               String            @unique
  name                String
  avatarUrl           String            @default("")
  genres              String            @default("")
  backgroundUrl       String            @default("")
  lastUpdatedAt       DateTime          @default(now())
  ratings             Rating[]
  following           SocialRelations[] @relation("followerId")
  followers           SocialRelations[] @relation("followingId")
  receivedSuggestions Suggestion[]      @relation("suggestedBy")
  madeSuggestions     Suggestion[]      @relation("suggestedTo")
  SavedSongs          SavedSongs[]
}

model Rating {
  id        Int      @id @default(autoincrement())
  type      String
  spotifyId String
  rating    Int
  createdAt DateTime @default(now())
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Suggestion {
  id                Int      @id @default(autoincrement())
  suggestedByUserId Int?
  suggestedToUserId Int?
  spotifyId         String
  rating            Int?
  type              String
  createdAt         DateTime @default(now())
  suggestedBy       User?    @relation("suggestedBy", fields: [suggestedByUserId], references: [id], onDelete: Cascade)
  suggestedTo       User?    @relation("suggestedTo", fields: [suggestedToUserId], references: [id], onDelete: Cascade)
}

model SocialRelations {
  id                Int   @id @default(autoincrement())
  followerIdUserId  Int?
  followingIdUserId Int?
  followerId        User? @relation("followerId", fields: [followerIdUserId], references: [id], onDelete: Cascade)
  followingId       User? @relation("followingId", fields: [followingIdUserId], references: [id], onDelete: Cascade)
}

model SavedSongs {
  id        Int      @id @default(autoincrement())
  authorId  User?    @relation(fields: [userId], references: [id])
  spotifyId String
  name      String
  imageUrl  String
  artists   Json
  album     Json
  addedAt   DateTime
  userId    Int?
}
